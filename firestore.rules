rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read/write their own user data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow authenticated users to read/write their own prescriptions
      match /prescriptions/{prescriptionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Allow authenticated users to read/write their own medicines
      match /medicines/{medicineId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Allow authenticated users to read/write their own documents
      match /documents/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Allow authenticated users to read/write their own events
      match /events/{eventId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Allow authenticated users to read/write their own doctors
      match /doctors/{doctorId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Allow authenticated users to read/write their own symptoms
      match /symptoms/{symptomId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Allow authenticated users to read/write their own vitals
      match /vitals/{vitalId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Allow authenticated users to read/write their own expenses
      match /expenses/{expenseId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // Allow public read access to static data if needed (optional)
    match /{document=**} {
      allow read: if true;
    }
  }
}
